(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Stories = require('./stories.jsx');
var Settings = require('./settings.jsx');
var Subscriptions = require('./subscriptions.jsx');

var River = React.createClass({displayName: "River",
  getInitialState: function getInitialState() {
    var login = localStorage.getItem('login');
    var token = localStorage.getItem('token');
    var panel = 'river';
    if(!login || login == '' || login == null || !token || token == '' || token == null) {
      panel = 'settings'
    }

    return {
      panel: panel
    };
  },

  togglePanel: function togglePanel(panel) {
    this.setState({
      panel: panel
    });
  },
  
  render: function render() {
    var that = this;

    var login = localStorage.getItem('login');
    var token = localStorage.getItem('token');

    var panel = '';

    if(that.state.panel === 'settings')
      panel = (React.createElement(Settings, {login: login, token: token, settingsChanged: this.forceUpdate}));
    else if(that.state.panel === 'subscriptions')
      panel = (React.createElement(Subscriptions, {login: login, token: token}));
    else
      panel = (React.createElement(Stories, {login: login, token: token}));

    var settingsButtonClasses =  ["btn", "btn-default", "button"];
    if(that.state.panel === 'settings') {
      settingsButtonClasses.push("active")
    }
    var settingsButton = (React.createElement("button", {type: "button", "aria-label": "Settings", className: settingsButtonClasses.join(' '), onClick: function() {
      that.togglePanel(that.state.panel == 'settings' ? '' : 'settings')
    }}, 
      React.createElement("span", {className: "glyphicon glyphicon-wrench", "aria-hidden": "true"}), " Settings"
    ));


    var subscriptionsButtonClasses = ["btn", "btn-default", "button"];
    if(that.state.panel === 'subscriptions') {
      subscriptionsButtonClasses.push("active")
    }
    var subscriptionsButton = (React.createElement("button", {type: "button", className: subscriptionsButtonClasses.join(' '), onClick: function() {
      that.togglePanel(that.state.panel == 'subscriptions' ? '' : 'subscriptions')
    }}, 
      React.createElement("span", {className: "glyphicon glyphicon-list", "aria-hidden": "true"}), " Feeds"
    ));

    
    var riverButtonClasses =  ["btn", "btn-default", "button"];
    if(that.state.panel === 'river') {
      riverButtonClasses.push("active")
    }
    var riverButton = (React.createElement("button", {type: "button", className: riverButtonClasses.join(' '), onClick: function() {
      that.togglePanel(that.state.panel == 'river' ? '' : 'river')
    }}, 
      React.createElement("span", {className: "glyphicon glyphicon-tint", "aria-hidden": "true"}), " River"
    ));



    return (
      React.createElement("div", {className: "panel panel-default box"}, 

        React.createElement("div", {className: "panel-heading clearfix box__header box__title"}, 
          React.createElement("div", {className: "btn-group pull-right"}, 
            riverButton, 
            subscriptionsButton, 
            settingsButton
          )
        ), 
        
        panel, 

        React.createElement("div", {className: "panel-footer box__content"}, "Made with ", React.createElement("a", {href: "https://push.superfeedr.com"}, "Superfeedr"), ". ", React.createElement("a", {href: "https://github.com/superfeedr/river.news"}, "Source"), ".")
      )
    );
  }
});


React.render(
  React.createElement(River, null),
  document.getElementById('content')
);

},{"./settings.jsx":2,"./stories.jsx":3,"./subscriptions.jsx":5}],2:[function(require,module,exports){
var Superfeedr = require('./utils/superfeedr.js');

var Settings = React.createClass({displayName: "Settings",

  getInitialState: function getInitialState() {
    return {
      loading: false,
      valid: false,
    }
  },

  demo: function demo(e) {
    React.findDOMNode(this.refs.login).value = 'rssriver';
    React.findDOMNode(this.refs.token).value = '00cf0f60ab7a616f132b702a5c1746a1';
    this.saveSettings(e);
  },

  saveSettings: function saveSettings(e) {
    var that = this;
    e.preventDefault();
    var login = React.findDOMNode(this.refs.login).value.trim();
    var token = React.findDOMNode(this.refs.token).value.trim();
    if (!token || !login) {
      return;
    }
    React.findDOMNode(this.refs.login).value = login;
    React.findDOMNode(this.refs.token).value = token;


    that.setState({
      valid: false,
      loading: true
    }, function() {
      Superfeedr.checkCredentials(login, token, function(error, valid) {
        if(error || !valid) {
          that.setState({
            loading: false
          }, function() {
            if(error.status == '401' || error.status == '403')
              alert('Your credentials are not valid. Please, try again.');
            else
              alert('We could not check your credentials. Please try again later.');
          });
        }
        else {
          that.setState({
            loading: false,
            valid: true
          }, function() {
            localStorage.setItem("login", login);
            localStorage.setItem("token", token);
            that.props.settingsChanged();
          });
        }
      });
    });

  },

  render: function render() {
    var button = (React.createElement("button", {type: "submit", className: "btn btn-default pull-right button button--raised button--positive"}, "Save"));
    if(this.state.loading) {
      button = (React.createElement("button", {type: "submit", className: "btn btn-default pull-right button button--raised button--positive"}, 
        React.createElement("span", {className: "glyphicon glyphicon glyphicon-refresh", disabled: "disabled", "aria-hidden": "true"}), " Saving"
        ));
    }
    if(this.state.valid) {
      button = (React.createElement("button", {type: "submit", className: "btn btn-success pull-right button button--raised button--positive"}, 
        React.createElement("span", {className: "glyphicon glyphicon-ok", "aria-hidden": "true"}), " Saved"
        ));
    }

    var demoButton = (React.createElement("button", {type: "button", className: "btn btn-default pull-right btn-link button button--flat button--neutral", onClick: this.demo}, "Use demo credentials"));


    return (
    React.createElement("form", {className: "panel-body box__content", onSubmit: this.saveSettings}, 
      React.createElement("div", {className: "form-group"}, 
        React.createElement("label", {htmlFor: "login", className: "form__label"}, "Login"), 
        React.createElement("input", {type: "text", className: "form-control form__input  input--text", ref: "login", placeholder: "Login", defaultValue: this.props.login}), 
        React.createElement("p", {className: "help-block"}, "Enter your ", React.createElement("a", {href: "http://superfeedr.com/subscriber/", target: "_blank"}, "Superfeedr subscriber"), " username.")
      ), 
      React.createElement("div", {className: "form-group"}, 
        React.createElement("label", {htmlFor: "token", className: "form__label"}, "Token"), 
        React.createElement("input", {type: "text", className: "form-control form__input  input--text", ref: "token", placeholder: "Token", defaultValue: this.props.token}), 
        React.createElement("p", {className: "help-block"}, "Create an ", React.createElement("a", {href: "https://superfeedr.com/tokens/new"}, "API token"), " with the following rights: ", React.createElement("var", null, "subscribe"), ", ", React.createElement("var", null, "unsubscribe"), ", ", React.createElement("var", null, "list"), " and ", React.createElement("var", null, "retrieve"), " and enter the token's value above.")
      ), 
      React.createElement("div", {className: "form-row form-row--form-actions"}, 
       demoButton, 
        button
      )
    ));
  }
});


module.exports = Settings;

},{"./utils/superfeedr.js":7}],3:[function(require,module,exports){
var serialize = require('./utils/serialize.js');

var Story = require('./story.jsx');

var Stories = React.createClass({displayName: "Stories",

  getInitialState: function() {
   return {
    loading: false,
    stories: [],
   }
  },

  componentDidMount: function() {
    this.loadContent();
  },

  loadContent: function loadContent() {
    var that = this;
    this.setState({
      error: false,
      loading: true
    }, function() {
      var url = "https://stream.superfeedr.com/";
      var query = {
        'count': 10,
        'hub.mode': 'retrieve',
        'authorization': btoa([that.props.login, that.props.token].join(':')),
        'hub.callback': 'https://push.superfeedr.com/dev/null'
      };

      url = [url, serialize(query)].join('?');
      var source = new EventSource(url);

      source.addEventListener("error", function(e) {
        that.setState({
          loading: false,
          error: "There was an error. Please, check your credentials."
        });
      });

      source.addEventListener("notification", function(e) {
        var notification = JSON.parse(e.data);
        notification.items.sort(function(x, y) {
          return x.published - y.published;
        });
        notification.items.forEach(function(item) {
          if(!item.source)
            item.source = {
              title: notification.title,
              permalinkUrl: notification.permalinkUrl
            }
            that.state.stories.unshift(item);
            that.setState({
              loading: false,
              stories: that.state.stories
            });
          });
      });
    });
  },


  render: function() {

    if(this.state.loading) {
      return (React.createElement("div", {className: "panel-body"}, 
        React.createElement("p", {className: "text-center"}, React.createElement("span", {className: "glyphicon glyphicon glyphicon-refresh", disabled: "disabled", "aria-hidden": "true"}))
      ));
    }
    else {
    var storyNodes = this.state.stories.map(function (story) {
      return (
        React.createElement(Story, {key: story.id, story: story}
        )
        );
    });

    return (React.createElement("div", {className: "list-group box__content"}, 
      storyNodes
      ));

    }

  }
});


module.exports = Stories;

},{"./story.jsx":4,"./utils/serialize.js":6}],4:[function(require,module,exports){
var Story = React.createClass({displayName: "Story",
  render: function() {
    var source = {
      title: "",
      url: "",
      icon: ""
    };
    if(this.props.story.source) {
      source.title = this.props.story.source.title;      
      source.icon = "http://www.google.com/s2/favicons?domain=" + encodeURIComponent(this.props.story.source.permalinkUrl);
      source.url = this.props.story.source.permalinkUrl;
    }
    var published = new Date(this.props.story.published * 1000).toUTCString();
    var summary = this.props.story.summary;
    if(!summary || summary == '') {
      summary = this.props.story.content;
    }
    return (
    React.createElement("section", {className: "list-group-item"}, 
      React.createElement("h4", {className: "list-group-item-heading"}, React.createElement("a", {href: this.props.story.permalinkUrl, target: "_blank"}, this.props.story.title)), 
      React.createElement("span", {className: "source"}, React.createElement("img", {src: source.icon}), source.title, ", published ", published), 
      React.createElement("div", {dangerouslySetInnerHTML: {__html: summary}})
    )
    );
  }
});


module.exports = Story;

},{}],5:[function(require,module,exports){
var Superfeedr = require('./utils/superfeedr.js');

var Subscriptions = React.createClass({displayName: "Subscriptions",

  getInitialState: function getInitialState() {
    return {
      subscriptions: [],
      loading: false,
    }
  },

  componentDidMount: function componentDidMount() {
    var that = this;
    that.setState({
      loading: true,
      subscriptions: []
    }, function() {
      Superfeedr.getSubscriptions(this.props.login, this.props.token, function(error, subscriptions) {
        that.setState({
          loading: false,
          subscriptions: subscriptions
        });
      });
    });
  },

  add: function add(e) {
    var that = this;
    e.preventDefault();

    var url = React.findDOMNode(this.refs.feed).value.trim();
    if(!url || url == '')
      return;

    that.setState({
      loading: true
    }, function() {
      Superfeedr.subscribe(that.props.login, that.props.token, url, function(err, result) {
        if(err)
          return that.setState({
            loading: false,
          }, function() { window.alert(err.message); });
 

        React.findDOMNode(that.refs.feed).value = "";
        
        that.state.subscriptions.push({subscription: {feed: {status: {feed: url}}}});
        that.setState({
          loading: false,
          subscriptions: that.state.subscriptions
        });
      });
    });
  },

  render: function render() {
    var that = this;

    var subscrptionNodes = that.state.subscriptions.map(function(s) {
      return (React.createElement(Subscription, {subscription: s, login: that.props.login, token: that.props.token}));
    });

    var addSubscription = (React.createElement("tr", null, 
      React.createElement("td", {className: "u-table-width-75p"}, 
        React.createElement("input", {type: "text", className: "form-control input-sm form__input input--text", ref: "feed", placeholder: "Feed URL"})
      ), 
      React.createElement("td", {className: "u-table-width-25p"}, 
        React.createElement("button", {type: "submit", className: "btn btn-default btn-sm pull-right button button--raised button--positive"}, 
          React.createElement("span", {className: "glyphicon glyphicon-plus", "aria-hidden": "true"}), " Add"
        )
      )
    ));

    if(that.state.loading) {
      addSubscription = (React.createElement("tr", null, 
      React.createElement("td", null, 
        React.createElement("input", {type: "text", className: "form-control input-sm form__input input--text input--disabled", ref: "feed", disabled: true, placeholder: "Feed URL"})
      ), 
      React.createElement("td", null, 
        React.createElement("button", {type: "submit", className: "btn btn-default btn-sm pull-right", disabled: true}, 
          React.createElement("span", {className: "glyphicon glyphicon-refresh", "aria-hidden": "true"}), " Add"
        )
      )
    ));
    }


    return (
      React.createElement("form", {className: "table-responsive panel-body", onSubmit: this.add}, 
        React.createElement("table", {className: "table"}, 
          React.createElement("tbody", null, 
            subscrptionNodes, 
            addSubscription
          )
        )
      )
    );
  }
});

var Subscription = React.createClass({displayName: "Subscription",

  getInitialState: function() {
    return {
      loading: false,
    }
  },

  removeSubscription: function removeSubscription(e) {
    var that = this;
    e.preventDefault();

    that.setState({
      loading: true
    }, function() {
     Superfeedr.unsubscribe(that.props.login, that.props.token, that.props.subscription, function(err, result) {
      if(err)
        return window.alert(err.message);

      that.setState({
        loading: false,
        unsubscribed: !err,
      });
    });
   });
  },

  render: function render() {
    var that = this;

    var rowClasses = "";
    if(that.state.unsubscribed) {
      rowClasses += "hidden";
    }

    var url = that.props.subscription.subscription.feed.status.feed;

    var button = (React.createElement("button", {className: "btn btn-sm pull-right btn-danger button button--raised button--negative", onClick: that.removeSubscription}, 
      React.createElement("span", {className: "glyphicon glyphicon-remove", "aria-hidden": "true"}), " Remove"
    ));
    if(that.state.loading) {
      button = (React.createElement("button", {className: "btn btn-sm pull-right btn-danger button button--raised button--negative", disabled: true}, 
        React.createElement("span", {className: "glyphicon glyphicon-refresh", "aria-hidden": "true"}), " Remove"
      ));
    }



    return (React.createElement("tr", {className: rowClasses}, 
      React.createElement("td", {className: "u-table-width-75p"}, 
        React.createElement("a", {href: url}, url)
      ), 
      React.createElement("td", {className: "u-table-width-25p"}, 
        button
      )
      ));
  }
});


module.exports = Subscriptions;

},{"./utils/superfeedr.js":7}],6:[function(require,module,exports){
function serialize(object, prefix) {
  var q = [];
  for(var k in object) {
    if (object.hasOwnProperty(k)) {
      var k = prefix ? prefix + "[" + k + "]" : k, v = object[k];
      q.push(typeof v == "object" ? serialize(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
    }
  }
  return q.join("&");
}

module.exports = serialize;

},{}],7:[function(require,module,exports){
var serialize = require('./serialize.js');

module.exports = {

	checkCredentials: function checkCredentials(login, token, callback) {
		
		var url = "https://push.superfeedr.com/";
		var query = {
			'rights': true,
			'hub.mode': 'authenticate',
			'authorization': btoa([login, token].join(':'))
		};

		url = [url, serialize(query)].join('?');

		var http = new XMLHttpRequest();
		http.onreadystatechange = function() { 
			if(http.readyState == 4) {
				if(http.status == 200) 
					return callback(null, true);
				else
					return callback({status: http.status, message: http.responseText});
			}
		}

    http.open("GET", url, true); // true for asynchronous 
    http.send(null);
  },

  getSubscriptions: function getSubscriptions(login, token, callback) {
		
		var url = "https://push.superfeedr.com/";
		var query = {
			'detailed': true,
			'by_page': 500,
			'hub.mode': 'list',
			'authorization': btoa([login, token].join(':'))
		};

		url = [url, serialize(query)].join('?');

		var http = new XMLHttpRequest();
		http.onreadystatechange = function() { 
			if(http.readyState == 4) {
				if(http.status == 200)
					return callback(null, JSON.parse(http.responseText).subscriptions);
				return callback({status: http.status, message: http.responseText}, []);
			}
		}

    http.open("GET", url, true); // true for asynchronous 
    http.send(null);
  },

  unsubscribe: function unsubscribe(login, token, subscription, callback) {
  	var url = "https://push.superfeedr.com/";
		var params = {
			'hub.mode': 'unsubscribe',
			'hub.callback': subscription.subscription.endpoint,
			'hub.topic': subscription.subscription.feed.status.feed,
			'authorization': btoa([login, token].join(':'))
		};

		var http = new XMLHttpRequest();
		http.onreadystatechange = function() { 
			if(http.readyState == 4) {
				if(http.status == 204)
					return callback(null, true);
				return callback({status: http.status, message: http.responseText}, []);
			}
		}

    http.open("POST", url, true); 
    var body = serialize(params);

    http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    http.setRequestHeader("Content-length", body.length);
    http.send(body);
  },

  subscribe: function subscribe(login, token, topic, callback) {
  	var url = "https://push.superfeedr.com/";
		var params = {
			'hub.mode': 'subscribe',
			'hub.callback': "https://push.superfeedr.com/dev/null",
			'hub.topic': topic,
			'authorization': btoa([login, token].join(':'))
		};

		var http = new XMLHttpRequest();
		http.onreadystatechange = function() { 
			if(http.readyState == 4) {
				if(http.status == 204)  
					return callback(null, true);
				return callback({status: http.status, message: http.responseText}, []);
			}
		}

    http.open("POST", url, true); 
    var body = serialize(params);

    http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    http.setRequestHeader("Content-length", body.length);
    http.send(body);
  },

};

},{"./serialize.js":6}]},{},[1]);
